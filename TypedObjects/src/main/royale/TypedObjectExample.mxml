<?xml version="1.0" encoding="utf-8"?>
<j:Application
	xmlns:fx="http://ns.adobe.com/mxml/2009"
	xmlns:js="library://ns.apache.org/royale/basic"
	xmlns:mx="library://ns.apache.org/royale/mx"
	xmlns:j="library://ns.apache.org/royale/jewel"
	applicationComplete="initApp()">

	<fx:Script>
		<![CDATA[
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;

			import org.apache.royale.jewel.Alert;
			import mx.rpc.remoting.RemoteObject;

			private var _myConnection:RemoteObject;

			private function initApp():void
			{
				_myConnection = new RemoteObject();
				_myConnection.destination = "amfphpExamplesGateway"; 
				_myConnection.endpoint = "../../../../Php/";
				_myConnection.source = "VoService";						
				_myConnection.addEventListener(ResultEvent.RESULT, handleResult);
				_myConnection.addEventListener(FaultEvent.FAULT, handleFault);
			}

			private function checkUrl():Boolean
			{
				if (window.location.protocol == "file:")
				{
					Alert.show("Please access this example through a server, and not through the file system, as the gateway is set as a relative url. Alternatively, you can change the url in the service-config.xml file, clean the project, and rebuild");
					return false;
				}
				return true;
			}

			private function onSendButton1Click():void
			{
				if (checkUrl())
				{
					_myConnection.receiveAndReturnUserVo1(new UserVo1());
				}
			}

			private function onSendButton2Click():void
			{
				if (checkUrl())
				{
					_myConnection.receiveAndReturnUserVo2(new UserVo2());
				}
			}

			private function handleResult(event:ResultEvent):void
			{
				Alert.show(event.result.status, "user vo status");
			}
			
			private function handleFault(event:FaultEvent):void
			{
				Alert.show(event.fault.faultString, "Fault");
			}
			
		]]>
	</fx:Script>

	<fx:Declarations>
	</fx:Declarations>

	<j:beads>
		<js:AMF0SupportBead/>
		<js:ClassAliasBead/>
		<js:MixinManager/>
	</j:beads>
    
    <j:valuesImpl>
        <js:SimpleCSSValuesImpl/>
    </j:valuesImpl>

	<j:initialView>
		<j:ResponsiveView id="rootView">
			<j:VGroup gap="2" width="100%" height="100%">
				<j:beads>
					<js:Paddings padding="10"/>
				</j:beads>
				<j:Label text="amfPHP Typed Object Example"/>
				<j:Label text="This example shows the two ways amfPHP can handle typed objects."/>
				<j:Label text="UserVo1 has a matching PHP type, UserVo2 doesn't."/>
				<j:Label text="See the VoService Methods for details."/>
				<j:Button text="Send and receive a UserVo1 Typed Object" click="onSendButton1Click()"/>
				<j:Button text="Send and receive a UserVo2 Typed Object" click="onSendButton2Click()"/>
			</j:VGroup>
		</j:ResponsiveView>
	</j:initialView>
</j:Application>